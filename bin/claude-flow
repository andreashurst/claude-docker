#!/bin/bash

# Claude Flow Universal Installer v3.2.0
# Advanced environment with Playwright and testing tools

set -e

VERSION="3.2.0"
CONTAINER_NAME="claude-flow"

# Load shared library
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
source "$SCRIPT_DIR/claude-docker.lib.sh"

CURRENT_DIR=$(pwd)

# Create compose files for Flow
claude_docker_create_files() {
    # Create minimal docker-compose.yml if needed
    claude_docker_create_base_compose

    # Ask about override file using library function
    claude_docker_ask_replace_override || return 0

    # Create playwright.config.js ONLY if it doesn't exist
    claude_docker_playwright_config

    # MCP configuration would go in container, not in project
    # Removed MCP config creation from project directory

    # Create custom entrypoint using library
    local ENTRYPOINT_FILE="/tmp/claude-flow-entrypoint-$$.sh"
    claude_docker_create_entrypoint "flow" "$ENTRYPOINT_FILE"

    # Create docker-compose.override.yml using library
    claude_docker_create_override "flow" "$ENTRYPOINT_FILE" "$CURRENT_DIR"

    # Create README for Flow
    cat > "README-Claude-Flow.md" << EOF
# Claude Flow Environment

## Features:
- 🎭 Playwright for browser automation
- 🔬 Hive-Mine for data analysis
- 🧪 Advanced testing capabilities
- 🚀 All Claude Dev features included

## Quick Start:
\`\`\`bash
playwright test          # Run Playwright tests
playwright test --ui    # Open test UI
playwright test --debug # Debug mode
playwright codegen      # Generate test code
\`\`\`

## Testing localhost:
- \`curl localhost\` - Works automatically
- \`ctest\` - Quick test

## First time setup:
1. \`claude auth login\` (if needed)
2. \`playwright install\` to setup browsers
EOF

    claude_docker_update_gitignore
}

# Main function
main() {
    echo "🎭 Claude Flow v$VERSION"
    echo "========================"
    echo "Advanced testing environment with Playwright"
    echo ""

    claude_docker_create_files
    claude_docker_check
    claude_docker_connect "$CONTAINER_NAME"

}

# Handle arguments
case "${1:-}" in
    -v|--version) echo "v$VERSION"; exit 0 ;;
    --stop) docker compose stop $CONTAINER_NAME; exit 0 ;;
    --clean) 
        docker compose down -v  # -v removes volumes too
        rm -f docker-compose.override.yml playwright.config.js
        echo "✅ Removed container, volume and config"
        exit 0 
        ;;
    --root)
        echo "🔐 Starting as root (backdoor mode)..."
        docker compose up -d
        sleep 3
        claude_docker_connect_as_root "$CONTAINER_NAME"
        ;;
    -h|--help)
        echo "Usage: $0 [--version|--stop|--clean|--root|--help]"
        echo "  --stop    Stop the container"
        echo "  --clean   Remove container, volume and config"
        echo "  --root    Start with root access (backdoor)"
        exit 0
        ;;
    "") main ;;
    *) echo "Unknown option: $1"; exit 1 ;;
esac
