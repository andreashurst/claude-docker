#!/bin/bash

if ! docker info >/dev/null 2>&1; then
    echo "Error: Docker is not running. Please start Docker and try again."
    exit 1
fi

CURRENT_DIR=$(pwd)
PROJECT_BASE=$(basename "$CURRENT_DIR")
COMPOSE_PROJECT_NAME="${PROJECT_BASE}-claude-dev"
COMPOSE_FILE="docker-compose.override.yml"

if [ -f "~.claude-docker/.credentials.json" ] && [ ! -f ".claude/.credentials.json" ]; then
    cp ~.claude-docker/.credentials.json .claude/.credentials.json
elif [ ! -f "~.claude-docker/.credentials.json" ] && [ -f ".claude/.credentials.json" ]; then
    cp ~.claude-docker/.credentials.json ~.claude/.credentials.json
fi
mkdir -p ".claude"
grep -q "^\.claude$" .gitignore 2>/dev/null || echo ".claude" >> .gitignore
grep -q "^\docker-compose.override.yml$" .gitignore 2>/dev/null || echo "docker-compose.override.yml" >> .gitignore

# Create project-specific docker-compose file
cat > "$COMPOSE_FILE" << EOF
services:
  claude-dev:
    image: andreashurst/claude-docker:latest-dev
    working_dir: /var/www/html

    extra_hosts:
      - "localhost:host-gateway"

    environment:
      - NODE_ENV=development
      - NPM_CONFIG_CACHE=/tmp/npm-cache
      - CLAUDE_CONFIG_PATH=/home/claude/.config/claude
      - CLAUDE_PROJECT_PATH=${CURRENT_DIR}
      - PROJECT_PATH=${CURRENT_DIR}

    stdin_open: true
    tty: true

    security_opt:
      - no-new-privileges:true

    restart: "no"

EOF

# Check if container is already running, if not start it
if ! docker compose -f "$COMPOSE_FILE" -p "$COMPOSE_PROJECT_NAME" ps --services --filter "status=running" | grep -q claude-dev; then
    echo "Starting ${COMPOSE_PROJECT_NAME}..."
    docker compose -f "$COMPOSE_FILE" -p "$COMPOSE_PROJECT_NAME" up -d
    # Wait a moment for container to be ready
    sleep 2
    # Connect to the running container
    docker compose -f "$COMPOSE_FILE" -p "$COMPOSE_PROJECT_NAME" exec claude-dev bash /usr/local/bin/entrypoint.sh
else
    echo "Container ${COMPOSE_PROJECT_NAME} already running..."
    docker compose -f "$COMPOSE_FILE" -p "$COMPOSE_PROJECT_NAME" exec claude-dev bash
fi

rm -f "$COMPOSE_FILE"
