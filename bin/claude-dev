#!/bin/bash

# Claude Docker Universal Installer v3.2.0 - KISS Edition
# Last updated: 2025-01-13

set -e

VERSION="3.2.0"
CONTAINER_NAME="claude-dev"

# Load shared library
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
source "$SCRIPT_DIR/claude-docker.lib.sh"

CURRENT_DIR=$(pwd)

# Create compose files
claude_docker_create_files() {
    # Create base docker-compose.yml if needed
    claude_docker_create_base_compose

    # Ask about override
    claude_docker_ask_replace_override || return 0

    # Create custom entrypoint using shared library
    local ENTRYPOINT_FILE="/tmp/claude-entrypoint-$$.sh"
    claude_docker_create_entrypoint "dev" "$ENTRYPOINT_FILE"

    # Create docker-compose.override.yml using library
    claude_docker_create_override "dev" "$ENTRYPOINT_FILE" "$CURRENT_DIR"

    claude_docker_update_gitignore
}

# Main function
main() {
    echo "Claude Docker v$VERSION"
    echo "========================"

    claude_docker_create_files
    claude_docker_check
    claude_docker_connect "$CONTAINER_NAME"

}

# Handle arguments
case "${1:-}" in
    -v|--version) echo "v$VERSION"; exit 0 ;;
    --stop) docker compose stop $CONTAINER_NAME; exit 0 ;;
    --clean) 
        docker compose down -v  # -v removes volumes too
        rm -f docker-compose.override.yml
        echo "‚úÖ Removed container, volume and config"
        exit 0 
        ;;
    --root)
        echo "üîê Starting as root (backdoor mode)..."
        docker compose up -d
        sleep 3
        claude_docker_connect_as_root "$CONTAINER_NAME"
        ;;
    -h|--help)
        echo "Usage: $0 [--version|--stop|--clean|--root|--help]"
        echo "  --stop    Stop the container"
        echo "  --clean   Remove container, volume and config"
        echo "  --root    Start with root access (backdoor)"
        exit 0
        ;;
    "") main ;;
    *) echo "Unknown option: $1"; exit 1 ;;
esac
