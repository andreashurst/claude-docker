#!/bin/bash

# Claude Docker Universal Installer v3.2.0 - KISS Edition
# Last updated: 2025-01-13

set -e

VERSION="3.2.0"
CONTAINER_NAME="claude-dev"

# Load shared library
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
source "$SCRIPT_DIR/claude-docker.lib.sh"

CURRENT_DIR=$(pwd)

# Create compose files
create_files() {
    # Create base docker-compose.yml if needed
    claude_docker_create_base_compose

    # Ask about override
    claude_docker_ask_replace_override || return 0

    # Create custom entrypoint using shared library
    local ENTRYPOINT_FILE="/tmp/claude-entrypoint-$$.sh"
    claude_docker_create_entrypoint "dev" "$ENTRYPOINT_FILE"

    # Create docker-compose.override.yml using library
    claude_docker_create_override "dev" "$ENTRYPOINT_FILE" "$CURRENT_DIR"

    claude_docker_update_gitignore
}

# Main function
main() {
    echo "Claude Docker v$VERSION"
    echo "========================"

    claude_docker_check
    
    # If container is already running, just connect
    if claude_docker_is_running "$CONTAINER_NAME"; then
        echo "✅ Container already running!"
        claude_docker_just_connect "$CONTAINER_NAME"
    else
        create_files
        claude_docker_start_and_connect "$CONTAINER_NAME"
    fi
}

# Handle arguments
case "${1:-}" in
    -v|--version) echo "v$VERSION"; exit 0 ;;
    --stop) docker compose stop $CONTAINER_NAME; exit 0 ;;
    --clean) docker compose down; rm -f docker-compose.override.yml; exit 0 ;;
    --root)
        echo "🔐 Starting as root (backdoor mode)..."
        claude_docker_check
        create_files
        docker compose down 2>/dev/null || true
        docker compose up -d
        sleep 3
        if docker compose ps "$CONTAINER_NAME" 2>/dev/null | grep -q "Up"; then
            echo "✅ Container started - connecting as root"
            docker compose exec "$CONTAINER_NAME" bash
        else
            echo "Failed to start. Check logs:"
            docker compose logs "$CONTAINER_NAME"
            exit 1
        fi
        ;;
    -h|--help)
        echo "Usage: $0 [--version|--stop|--clean|--root|--help]"
        echo "  --root    Start with root access (backdoor)"
        exit 0
        ;;
    "") main ;;
    *) echo "Unknown option: $1"; exit 1 ;;
esac
