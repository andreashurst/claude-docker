{
  "mcpServers": {
    "playwright": {
      "command": "npx",
      "args": ["@anthropic-ai/mcp-server-playwright"],
      "env": {
        "PLAYWRIGHT_BROWSERS_PATH": "/home/claude/.cache/ms-playwright"
      }
    },
    "filesystem": {
      "command": "npx",
      "args": ["@modelcontextprotocol/server-filesystem", "/var/www/html"]
    },
    "git": {
      "command": "npx",
      "args": ["@modelcontextprotocol/server-git", "--repository", "/var/www/html"]
    }
  },
  "environmentInfo": {
    "internalWebServer": {
      "status": "Running on port 80",
      "url": "http://localhost:80",
      "servingDirectory": "{{WEB_DIR}}",
      "hostAccess": "http://localhost:8080",
      "description": "Internal Python HTTP server for testing static files with Playwright",
      "usage": {
        "playwright": "Use http://localhost:80 for Playwright tests inside the container",
        "example": "await page.goto('http://localhost:80')"
      }
    },
    "playwrightTesting": {
      "description": "Playwright is pre-installed with browsers. Use the internal web server for testing.",
      "exampleTest": {
        "description": "Example Playwright test using internal web server",
        "code": [
          "const { chromium } = require('playwright');",
          "",
          "(async () => {",
          "  const browser = await chromium.launch({ headless: true });",
          "  const page = await browser.newPage();",
          "  ",
          "  // Test the internal web server",
          "  await page.goto('http://localhost:80');",
          "  const title = await page.title();",
          "  console.log('Page title:', title);",
          "  ",
          "  // Take screenshot",
          "  await page.screenshot({ path: 'test.png' });",
          "  ",
          "  await browser.close();",
          "})()"
        ]
      },
      "runTest": "node test.js or playwright test",
      "codegen": "playwright codegen http://localhost:80"
    },
    "hostNetworking": {
      "hostGateway": "host.docker.internal",
      "description": "Use host.docker.internal to access services running on the host system",
      "configuredFrontendUrl": "{{FRONTEND_URL}}",
      "projectPath": "{{PROJECT_PATH}}",
      "commonPorts": {
        "frontend": {
          "configured": "http://{{FRONTEND_URL}}",
          "react": "http://host.docker.internal:3000",
          "vite": "http://host.docker.internal:5173", 
          "nextjs": "http://host.docker.internal:3000",
          "angular": "http://host.docker.internal:4200",
          "vue": "http://host.docker.internal:8080",
          "webpack": "http://host.docker.internal:8080"
        },
        "backend": {
          "express": "http://host.docker.internal:8000",
          "django": "http://host.docker.internal:8000",
          "flask": "http://host.docker.internal:5000",
          "rails": "http://host.docker.internal:3000",
          "fastapi": "http://host.docker.internal:8000",
          "laravel": "http://host.docker.internal:8000"
        },
        "databases": {
          "postgresql": "postgresql://user:pass@host.docker.internal:5432/db",
          "mysql": "mysql://user:pass@host.docker.internal:3306/db",
          "mongodb": "mongodb://host.docker.internal:27017/db",
          "redis": "redis://host.docker.internal:6379",
          "elasticsearch": "http://host.docker.internal:9200"
        }
      },
      "testCommands": [
        "ping host.docker.internal",
        "nc -zv host.docker.internal {{FRONTEND_PORT}}",
        "curl -I http://{{FRONTEND_URL}}",
        "test-host-connectivity",
        "test-port {{FRONTEND_PORT}}"
      ],
      "documentation": "/var/www/html/docs/HOST_NETWORKING.md"
    },
    "container": {
      "workingDirectory": "/var/www/html",
      "user": "claude (UID 1010)",
      "runtimes": ["node", "deno", "python3"],
      "tools": [
        "node", "npm", "npx", "pnpm", "deno",
        "python3", "pip3",
        "git", "curl", "wget", "ssh",
        "playwright", "sqlite3",
        "jq", "ripgrep", "tree", "htop", "nc",
        "nano", "vim", "make",
        "claude", "claude-flow",
        "test-host-connectivity", "test-port"
      ],
      "volumes": {
        "project": "{{PROJECT_PATH}} mounted to /var/www/html",
        "mcp_config": "/home/claude/.config/claude/claude_desktop_config.json (read-only)"
      }
    }
  }
}