#!/bin/bash

# Set paths
export PATH="/home/claude/.deno/bin:/usr/local/bin:$PATH"
export NODE_PATH="/usr/local/lib/node_modules:$NODE_PATH"
export PLAYWRIGHT_BROWSERS_PATH="/opt/playwright-browsers"

ROOT="/var/www/html"

# Setup /home/claude directories (since it's volume-mounted)
mkdir -p /home/claude/.claude/plugins /home/claude/.claude/databases /home/claude/.claude/context
mkdir -p /home/claude/.npm-global/bin

# Setup claude-flow required directories (from official GitHub documentation)
# These contain SQLite databases and may appear empty but are essential
mkdir -p /home/claude/.hive-mind    # Contains config.json and SQLite session data
mkdir -p /home/claude/.swarm        # Contains memory.db (SQLite database)
mkdir -p /home/claude/memory        # Agent-specific memories (created when agents spawn)
mkdir -p /home/claude/coordination  # Active workflow files (created during tasks)

# Copy pre-built environment facts database if it doesn't exist
if [ ! -f /home/claude/.claude/databases/main.db ] && [ -f /opt/mcp-cache/databases/environment.db ]; then
    cp /opt/mcp-cache/databases/environment.db /home/claude/.claude/databases/main.db
    echo "Environment facts database initialized from CLAUDE.md"
fi

chown -R claude:claude /home/claude

# Setup MCP
if [ ! -f /home/claude/.claude.json ]; then
    cp /opt/mcp-cache/claude-template.json /home/claude/.claude.json
    sed -i "s|/var/www/html|$ROOT|g" /home/claude/.claude.json
fi

# Initialize project settings if not exists
mkdir -p /var/www/html/.claude
if [ ! -f /var/www/html/.claude/settings.local.json ]; then
    # Use template for new projects
    if [ -f /opt/mcp-cache/claude-project-settings-template.json ]; then
        cp /opt/mcp-cache/claude-project-settings-template.json /var/www/html/.claude/settings.local.json
        echo "Claude Code settings initialized from template"
    fi
elif [ -f /home/claude/.claude.json ]; then
    # Update existing settings (preserve user changes)
    cp /home/claude/.claude.json /var/www/html/.claude/settings.local.json
    echo "Settings updated from /home/claude/.claude.json"
fi

[ -f /opt/mcp-cache/mcp.json ] && ln -sf /opt/mcp-cache/mcp.json /home/claude/.claude/plugins/mcp.json

# Create MCP symlinks
[ -d /opt/mcp-assets ] && {
    mkdir -p /home/claude/mcp
    ln -sfn /opt/mcp-assets/servers /home/claude/mcp/servers
    ln -sfn /opt/mcp-assets/context /home/claude/mcp/context
    ln -sfn /opt/mcp-cache/mcp.json /home/claude/mcp/config.json
    ln -sfn /opt/mcp-assets/init.sh /home/claude/mcp/init.sh

    mkdir -p /home/claude/.claude/context
    find /opt/mcp-assets/context -name "*.json" -type f | while read f; do
        ln -sf "$f" "/home/claude/.claude/context/$(basename "$f")"
    done

    chmod +x /opt/mcp-assets/servers/*.js 2>/dev/null
    chown -R claude:claude /home/claude/mcp /home/claude/.claude
}

# Block package managers
[ -f /.dockerenv ] && {
    cat > /usr/local/bin/apt << 'EOF'
#!/bin/sh
echo "Use the host system for APT package management"
exit 1
EOF
    chmod +x /usr/local/bin/apt
    cp /usr/local/bin/apt /usr/local/bin/apt-get
}

# Detect project type
PROJECT_TYPE="unknown"
[ -f package.json ] && PROJECT_TYPE="Node.js"
[ -f composer.json ] && PROJECT_TYPE="PHP/Laravel"
[ -f requirements.txt ] && PROJECT_TYPE="Python"
[ -f Gemfile ] && PROJECT_TYPE="Ruby"
[ -f go.mod ] && PROJECT_TYPE="Go"
[ -f .ddev/config.yaml ] && PROJECT_TYPE="DDEV"

# Playwright will create its own directories as needed

# Setup bashrc from system template
ln -sf /opt/mcp-cache/bashrc /home/claude/.bashrc

# Add npm global path configuration for claude user
echo "export NPM_CONFIG_PREFIX=/home/claude/.npm-global" >> /home/claude/.bashrc
echo "export PATH=/home/claude/.npm-global/bin:\$PATH" >> /home/claude/.bashrc

# Add curl wrapper
cp /var/www/html/docker/bin/curl-wrapper /usr/local/bin/curl
chmod +x /usr/local/bin/curl

# Add npx wrapper (redirects "npx playwright" to "playwright")
cp /var/www/html/docker/bin/npx-wrapper /usr/local/bin/npx
chmod +x /usr/local/bin/npx

# Switch to claude user
cd /var/www/html
exec su claude -c "export PLAYWRIGHT_BROWSERS_PATH=/opt/playwright-browsers && export NODE_PATH=/usr/local/lib/node_modules && export NPM_CONFIG_PREFIX=/home/claude/.npm-global && export PATH=/home/claude/.npm-global/bin:\$PATH && cd /var/www/html && exec bash"
