FROM node:22-alpine

# Security updates and essential packages
RUN apk update && apk upgrade && \
    apk add --no-cache \
    git \
    bash \
    curl \
    wget \
    unzip \
    ca-certificates \
    jq \
    ripgrep \
    tree \
    htop \
    netcat-openbsd \
    nano \
    vim \
    make \
    openssh-client \
    iputils \
    sudo \
    # Development languages and tools for Host-Simulation
    php83 php83-cli php83-phar php83-json php83-mbstring php83-openssl \
    php83-curl php83-dom php83-xml php83-tokenizer \
    python3 py3-pip \
    ruby ruby-dev \
    go \
    rust cargo \
    gcc g++ musl-dev \
    postgresql-client mysql-client \
    redis \
    docker-cli \
    # Image and PDF handling tools
    imagemagick \
    imagemagick-doc \
    imagemagick-dev \
    ghostscript \
    poppler-utils \
    ffmpeg \
    exiftool \
    graphicsmagick \
    libwebp-tools \
    jpegoptim \
    pngquant \
    optipng \
    && rm -rf /var/cache/apk/*

# Install additional package managers and MCP servers
RUN npm install -g pnpm yarn bun && \
    pip3 install --break-system-packages pipenv poetry && \
    # Install MCP servers for Claude
    npm install -g @modelcontextprotocol/server-filesystem \
                   @modelcontextprotocol/server-memory \
                   @modelcontextprotocol/server-sqlite \
                   @modelcontextprotocol/server-git && \
    # Install composer for PHP
    wget -O /usr/local/bin/composer https://getcomposer.org/composer-stable.phar && \
    chmod +x /usr/local/bin/composer

# Create non-root user
RUN addgroup -g 1010 claude && \
    adduser -D -s /bin/bash -u 1010 -G claude claude

# Add claude to sudoers
RUN echo "claude ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers

# Create directories
RUN mkdir -p /home/claude/.config && \
    mkdir -p /home/claude/.claude && \
    chown -R claude:claude /home/claude

# Copy context files to claude user directory
COPY claude/ /home/claude/.claude/

# Copy MCP default configuration
COPY docker/mcp-default.json /etc/claude/mcp-default.json

# Fix ownership of copied files
RUN chown -R claude:claude /home/claude/.claude

# Install Claude Code globally and fix npm global binaries path
RUN npm install -g @anthropic-ai/claude-code && \
    # Fix npm global binaries to be accessible
    echo 'export PATH="$(npm config get prefix)/bin:$PATH"' >> /etc/profile && \
    echo 'export PATH="$(npm config get prefix)/bin:$PATH"' >> /etc/bash.bashrc && \
    # Create direct symlinks for critical commands
    ln -sf $(npm config get prefix)/bin/claude /usr/local/bin/claude 2>/dev/null || true

# Settings will be created dynamically by entrypoint
# No static config files needed

# Set environment variables
ENV NPM_CONFIG_CACHE=/tmp/npm-cache \
    NODE_ENV=development \
    DOCKER_ENV=true \
    NPM_CONFIG_PREFIX="/usr/local" \
    PATH="/usr/local/bin:/usr/local/lib/node_modules/.bin:$PATH"

# Set working directory
WORKDIR /var/www/html

# Simple bash as default (installer will override with custom entrypoint)
CMD ["/bin/bash"]
